 #Slabmaker variables
    input_filepath = config.get('input_filepath') 
    x_size_init = float(config.get('x_size_init', 150))
    y_size_init = float(config.get('y_size_init', 150))
    z_size_init = float(config.get('z_size_init', 150))
    fit_x = str_to_bool(config.get('fit_x', 'False'))
    fit_y = str_to_bool(config.get('fit_y', 'False'))
    fit_z = str_to_bool(config.get('fit_z', 'False'))
    a = float(config.get('a'))
    b = float(config.get('b'))
    c = float(config.get('c'))
    alpha = float(config.get('alpha'))
    beta = float(config.get('beta'))
    gamma = float(config.get('gamma'))

    # voxelgridmaker variables
    r_voxel_size = float(config.get('r_voxel_size', 0.3))
    q_voxel_size =  float(config.get('q_voxel_size', 0.04))
    max_q = float(config.get('max_q', 2.5))
    energy = float(config.get('energy', 10000))
    fill_bkg = str_to_bool(config.get('fill_bkg', 'False'))
    smooth = float(config.get('smooth', 0))

    #detectormaker variables
    num_pixels = int(config.get('num_pixels', max_q/q_voxel_size))
    angle_init_val1 = float(config.get('angle_init_val1', 0))
    angle_init_val2 = float(config.get('angle_init_val2', 0))
    angle_init_val3 = float(config.get('angle_init_val3', 0))
    angle_init_ax1 = config.get('angle_init_ax1', 'None')
    angle_init_ax2 = config.get('angle_init_ax2', 'None')
    angle_init_ax3 = config.get('angle_init_ax3', 'None')
    psi_start = float(config.get('psi_start'))
    psi_end = float(config.get('psi_end'))
    psi_num = int(config.get('psi_num'))
    psi_weights_path = config.get('psi_weights_path', None)
    phi_start = float(config.get('phi_start'))
    phi_end = float(config.get('phi_end'))
    phi_num = int(config.get('phi_num'))
    phi_weights_path = config.get('phi_weights_path', None)
    theta_start = float(config.get('theta_start'))
    theta_end = float(config.get('theta_end'))
    theta_num = int(config.get('theta_num'))
    theta_weights_path = config.get('theta_weights_path', None)
    mirror = str_to_bool(config.get('mirror', 'False'))
    angle_init_vals = (angle_init_val1, angle_init_val2, angle_init_val3)
    angle_init_axs = (angle_init_ax1, angle_init_ax2, angle_init_ax3)
    psis = np.linspace(psi_start, psi_end, psi_num)
    phis =np.linspace(phi_start, phi_end, phi_num)
    thetas = np.linspace(theta_start, theta_end, theta_num)

    #experimental comparison
    mask_path = config.get('mask_path')
    img_path = config.get('img_path')
    qxy_path = config.get('qxy_path')
    qz_path = config.get('qz_path')

    pad_width = config.get('pad_width')
    pad_range_min = config.get('pad_range_min')
    pad_range_max = config.get('pad_range_max')
    pad_range = (pad_range_min, pad_range_max)

    #save directory
    save_folder = config.get('save_folder')
    os.makedirs(save_folder, exist_ok=True)
    num_evals = config.get('num_evals')